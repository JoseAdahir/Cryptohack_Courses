import Crypto.Util.number 
import gmpy2

def gdcExt(a,b):
    r = a%b
    if b%r == 0:
        return r , 1, -(a//b)
    gdc, x, y = gdcExt (b,r)
    x -= y*(a//b)
    # print(f'{y = } {x = }')
    return gdc, y , x



n = 171731371218065444125482536302245915415603318380280392385291836472299752747934607246477508507827284075763910264995326010251268493630501989810855418416643352631102434317900028697993224868629935657273062472544675693365930943308086634291936846505861203914449338007760990051788980485462592823446469606824421932591                                                                  
e = 65537
ct = 161367550346730604451454756189028938964941280347662098798775466019463375610700074840105776873791605070092554650190486030367121011578171525759600774739890458414593857709994072516290998135846956596662071379067305011746842247628316996977338024343628757374524136260758515864509435302781735938531030576289086798942  

phi = n-1
_, _, d = gdcExt(phi, e)
mens = pow(ct,d,n)
longitud=(mens.bit_length()+7)//8
plaintext = mens.to_bytes(longitud,'big')
print(plaintext)


